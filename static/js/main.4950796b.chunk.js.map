{"version":3,"sources":["image/doge.png","components/Navbar.jsx","services/CryptoAPI.js","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/NewsAPI.js","components/News.jsx","App.jsx","app/store.js","index.js"],"names":["Navbar","useState","activeMenue","setActiveMenue","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","CryptoApiHeaders","createRequest","url","headers","CryptoAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getDetails","coinId","getHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetDetailsQuery","useGetHistoryQuery","useGetExchangesQuery","Loader","Typography","Homepage","data","isFetching","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangeData","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptoList","coins","cryptos","setCryptos","search","setSearch","matchingData","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","uuid","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currPrice","coinName","coinPrice","coinTimeStamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","settimePeriod","cryptoDetails","console","log","slug","DollarCircleOutlined","NumberOutlined","allTimeHigh","TrophyOutlined","stotal","supply","genericStats","numberOfExchanges","MoneyCollectOutlined","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","defaultValue","val","timeOption","links","link","type","href","rel","require","config","newsHeaders","NewsAPI","getNews","category","useGetNewsQuery","staticImage","News","newsCategory","setnewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","index","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","element","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4950796b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/doge.c7da9b89.png\";","import React, {useState, useEffect} from 'react'\nimport {Button, Menu, Typography, Avatar} from 'antd'\nimport {Link} from 'react-router-dom'\nimport {\n  HomeOutlined, \n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined\n} from '@ant-design/icons'\nimport icon from '../image/doge.png'\n\n\nconst Navbar = () => {\n\n  const [activeMenue, setActiveMenue] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth)\n\n    window.addEventListener('resize', handleResize)\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) \n\n  useEffect(() => {\n    if(screenSize < '800'){\n      setActiveMenue(false);\n    }else{\n      setActiveMenue(true);\n    }\n  }, [screenSize])\n\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/Crypto-App\">Crypto Home</Link>\n        </Typography.Title>\n        <Button className='menu-control-container' onClick={() => setActiveMenue(! activeMenue)}>\n          <MenuOutlined/>\n        </Button>\n      </div>\n      { activeMenue && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined/>}>\n            <Link to=\"/Crypto-App\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined/>}>\n            <Link to=\"/Crypto-App/cryptocurrencies\">Crypto Currencies</Link>\n          </Menu.Item> \n          {/* <Menu.Item icon={<MoneyCollectOutlined/>}>\n            <Link to=\"/Crypto-App/exchanges\">Exchanges</Link>\n          </Menu.Item> */}\n          <Menu.Item icon={<BulbOutlined/>}>\n            <Link to=\"/Crypto-App/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  )\n}\n\nexport default Navbar\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\n// coinranking405a15fc54021e95846399ba65f7b2e4012265f0e18bb712\n\nconst CryptoApiHeaders = {\n\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': 'bbd7876effmsh6295e9459f7fa68p148a1ejsn38958f0cf2da',\n  // \"x-rapidapi-host\" : 'https://coinranking1.p.rapidapi.com/coins',\n  // mode: 'no-cors',\n  // 'x-access-token': 'coinranking405a15fc54021e95846399ba65f7b2e4012265f0e18bb712',\n  \n}\n\nconst BaseURL = 'https://coinranking1.p.rapidapi.com';\n// const BaseURL = 'https://api.coinranking.com/v2';\n\n\nconst createRequest = (url) => ({\n  url,    // url : url\n  headers: CryptoApiHeaders\n});\n\nexport const CryptoAPI = createApi({\n  reducerPath: 'CryptoAPI',\n  baseQuery: fetchBaseQuery({baseUrl: BaseURL}),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`)\n    }),\n    getDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getHistory: builder.query({\n      query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges')\n    }),\n  })\n})\n\n\nexport const {\n  useGetCryptosQuery,   // redux created hook for me\n  useGetDetailsQuery,\n  useGetHistoryQuery,\n  useGetExchangesQuery,\n} = CryptoAPI;\n","import React from 'react'\nimport {Spin} from 'antd'\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <Spin />\n    </div>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport millify from 'millify'\nimport {Typography, Row, Col, Statistic} from 'antd'\nimport {Link} from 'react-router-dom'\nimport {useGetCryptosQuery} from '../services/CryptoAPI'\nimport {Cryptocurrencies, News} from '../components'\n\nimport Loader from './Loader'\n\nconst {Title} = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const stats = data?.data?.stats;\n\n\n  if(isFetching)\n    return <Loader />;\n\n\n  // console.log(data);\n  return (\n    <>\n      <Title level={2} className=\"heading\">\n        Global Cryptoo Statistics\n      </Title>\n      <Row>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={stats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(stats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(stats.totalMarketCap)} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(stats.total24hVolume)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market\" value={millify(stats.totalMarkets)} /></Col>\n      </Row>\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Crypto Currencies in the world</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/Crypto-App/cryptocurrencies\">Show More</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest news about Crypto Currencies</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/Crypto-App/news\">Show News</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  )\n}\n\nexport default Homepage\n","import React from 'react'\nimport {useGetExchangesQuery} from '../services/CryptoAPI'\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\n\n\nconst Exchanges = () => {\n  const {data, isFetching} = useGetExchangesQuery();\n\n    // console.log(data);\n  if(isFetching)\n    return <Loader />;\n\n  const exchangeData = data?.data?.exchanges;\n  // console.log('exchangedata', exchangeData);\n\n  return (\n    <>\n    <Row>\n      <Col span={6}>Exchanges</Col>\n      <Col span={6}>24h Trade Volume</Col>\n      <Col span={6}>Markets</Col>\n      <Col span={6}>Change</Col>\n    </Row>\n    <Row>\n      {exchangeData.map((exchange) => (\n        <Col span={24} key={exchange.id}>\n          <Collapse>\n            <Panel\n              key={exchange.id}\n              showArrow={false}\n              header={(\n                <Row key={exchange.id}>\n                  <Col span={6}>\n                    <Text><strong>{exchange.rank}.</strong></Text>\n                    <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                    <Text><strong>{exchange.name}</strong></Text>\n                  </Col>\n                  <Col span={6}>${millify(exchange.volume)}</Col>\n                  <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                  <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                </Row>\n                )}\n            >\n              {HTMLReactParser(exchange.description || '')}\n            </Panel>\n          </Collapse>\n        </Col>\n      ))}\n    </Row>\n  </>\n  )\n}\n\nexport default Exchanges\n","import React, {useState, useEffect} from 'react'\nimport millify from 'millify'\nimport {Link} from 'react-router-dom'\nimport {Card, Row, Col, Input, Typography} from 'antd'\n\nimport Loader from './Loader'\nimport {useGetCryptosQuery} from '../services/CryptoAPI'\n\nconst Cryptocurrencies = ({simplified}) => {\n\n  const count = simplified ? 10 : 99;\n  const {data} = useGetCryptosQuery(count);\n  const cryptoList = data?.data?.coins;\n  const [cryptos, setCryptos] = useState()\n  const [search, setSearch] = useState(\"\");\n\n  // console.log(data);\n\n\n  useEffect(() => {\n\n    if(cryptoList){\n      const matchingData = cryptoList.filter((coin) => {\n        const name = coin.name.toLowerCase();\n        return name.includes(search.toLowerCase());\n      });\n      setCryptos(matchingData);\n    }\n  }, [cryptoList, search])\n\n\n  // console.log(\"cryptos\", cryptoList);\n\n  if(! cryptos)\n    return (\n      <>\n\n      {\n        simplified ?\n\n         <Loader />\n        :\n        <>\n          <Typography.Title level={2} className=\"heading\">\n          Crypto Currencies\n          </Typography.Title>\n           <Loader />\n        </>\n      }\n      </>\n    );\n\n    // console.log(cryptos);\n  \n  return (\n    <>\n\n    {\n       ! simplified && (\n        <>\n        <Typography.Title level={2} className=\"heading\">\n            Crypto Currencies\n        </Typography.Title>\n\n        <div className=\"search-crypto\">\n          <Input placeholder=\"Search Crypto Currency\" onChange={(e) => setSearch(e.target.value)} />\n        </div>\n        </>\n      )\n    }\n\n      <Row gutter={[32,32]} className=\"crypto-card-container\">\n      {cryptos?.map((currency) => (\n        <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n          <Link to={`/Crypto-App/crypto/${currency.uuid}`}>\n            <Card\n              title={`${currency.rank}. ${currency.name}`}\n              extra={<img className=\"crypto-image\" src={currency.iconUrl} alt={currency.name}/>}\n              hoverable\n              >\n                <p>Price: ${millify(currency.price)}</p>\n                <p>Market Cap: ${millify(currency.marketCap)}</p>\n                <p>Daily Change: ${millify(currency.change)}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n\n\n    </>\n  )\n}\n\nexport default Cryptocurrencies\n","import React from 'react'\nimport {Line} from 'react-chartjs-2'\nimport {Col, Row, Typography } from 'antd'\n\nconst { Title } = Typography;\n\nconst LineChart = ({coinHistory, currPrice, coinName}) => {\n\n  // console.log(\"hostory\", coinHistory);\n\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n\n  for(let i=0; i< coinHistory?.data?.history?.length; i++) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimeStamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels : coinTimeStamp,\n    datasets : [\n      {\n        label : 'Price in USD',\n        data : coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor : '#0071bd',\n      }\n    ]\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  }\n\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price chart</Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price ${currPrice}</Title>\n        </Col>\n      </Row>\n\n      <Line data={data} options={options} />\n    </>\n  )\n}\n\nexport default LineChart\n","import React, {useState} from 'react'\nimport HTMLReactParser from 'html-react-parser'\nimport {useParams} from 'react-router-dom'\nimport millify from 'millify'\nimport {Col, Row, Typography, Select} from 'antd'\nimport { \n  MoneyCollectOutlined, \n  DollarCircleOutlined, \n  FundOutlined, \n  ExclamationCircleOutlined, \n  StopOutlined, \n  TrophyOutlined, \n  CheckOutlined, \n  NumberOutlined, \n  ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetDetailsQuery, useGetHistoryQuery } from '../services/CryptoAPI'\nimport LineChart from './LineChart'\nimport Loader from './Loader'\n\nconst {Title, Text} = Typography;\nconst {Option} = Select;\n\nconst CryptoDetails = () => {\n\n  const {coinId} = useParams();\n  const [timePeriod, settimePeriod] = useState('7d');\n  const { data, isFetching } = useGetDetailsQuery(coinId);\n  const { data: coinHistory } = useGetHistoryQuery({coinId, timePeriod});\n  const cryptoDetails = data?.data?.coin;\n\n  // console.log(data);\n  // console.log(\"hostory detail\", coinHistory);\n  if(isFetching)\n    return <Loader />;\n\n  console.log(cryptoDetails);\n  console.log('volume' , cryptoDetails.volume);\n  console.log('slug', cryptoDetails.slug);\n\n\nconst time = ['3h', '24h', '7d', '30d', '3m', '1y', '3y', '5y'];\n\nconst stats = [\n  { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n  { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n  // { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n  { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n  { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n];\n\nconst stotal = cryptoDetails.supply.total ? cryptoDetails.supply.total : 0 ;\n\nconst genericStats = [\n  { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n  { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n  { title: 'Aprroved Supply', value: cryptoDetails.supply.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n  { title: 'Total Supply', value: `$ ${millify(stotal)}`, icon: <ExclamationCircleOutlined /> },\n  { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.supply.circulating)}`, icon: <ExclamationCircleOutlined /> },\n];\n\n\n  return (\n    <>\n      <Col className=\"coin-detail-container\">\n        <Col className=\"coin-heading-container\">\n          <Title level={2} className=\"coin-name\">\n            {/* {CryptoDetails.name} ({cryptoDetails.slug}) Price */}\n            {cryptoDetails.name} Price\n          </Title>\n          <p>\n            {cryptoDetails.price} Live price in US dollars. View value statistics, market cap and sypply.\n          </p>\n        </Col>\n          <Select\n            defaultValue=\"7d\"\n            placeholder=\"Select Time Period\"\n            className=\"select-timeperiod\"\n            onChange={(val) => settimePeriod(val)}\n            >\n              {time.map((timeOption) => \n                <Option key={timeOption}>{timeOption}</Option>\n              )}\n          </Select>\n  \n\n        {/* chart in lline  */}\n      <LineChart coinHistory={coinHistory} currPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>\n              An overview having statistics of {cryptoDetails.name}\n            </p>\n          </Col>\n          {stats.map(({title, value, icon}) => (\n            <Col className=\"coin-stats\" key={title}>\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Col className=\"stats\">\n                {value}\n              </Col>\n            </Col>\n          ))}\n        </Col>\n\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-heading\">\n              Other Statistics\n            </Title>\n            <p>\n              An overview having statistics of all Cryptocurrencies\n            </p>\n          </Col>\n          {genericStats.map(({title, value, icon}) => (\n            <Col className=\"coin-stats\" key={title}>\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Col className=\"stats\">\n                {value}\n              </Col>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row key={link.name} className=\"coin-link\">\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n    </>\n  )\n}\n\nexport default CryptoDetails\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\nrequire('dotenv').config();\n\nconst newsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n  'x-rapidapi-key': 'bbd7876effmsh6295e9459f7fa68p148a1ejsn38958f0cf2da',\n}\n\nconst baseURL = 'https://bing-news-search1.p.rapidapi.com'\n\nconst createReques = (url) => ({\n  url,  // url : url \n  headers: newsHeaders\n});\n\nexport const NewsAPI = createApi({\n  reducerPath: 'NewsAPI',\n  baseQuery: fetchBaseQuery({baseUrl: baseURL}),\n  endpoints: (builder) => ({\n    getNews: builder.query({\n      query: ({category, count}) => createReques(`/news/search?q=${category}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\n    })\n  })\n})\n\nexport const {\n  useGetNewsQuery,   // redux created hook for me\n} = NewsAPI;","import React, {useState} from 'react'\nimport {Select, Row, Typography, Col, Avatar, Card} from 'antd'\nimport moment from 'moment'\nimport Loader from './Loader';\n\nimport { useGetNewsQuery } from '../services/NewsAPI';\nimport { useGetCryptosQuery } from '../services/CryptoAPI'\n\nconst {Text, Title} = Typography;\nconst {Option} = Select;\nconst staticImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\n\nconst News = ({simplified}) => {\n\n  const [newsCategory, setnewsCategory] = useState(\"Cryptocurrency\")\n  const count = simplified ? 6 : 12;\n  const { data: cryptoNews } = useGetNewsQuery({category: newsCategory, count: count})\n  const { data } = useGetCryptosQuery(100)\n\n  // console.log(\"crypto news \", cryptoNews);\n\n  if(!cryptoNews?.value)\n    return (\n    <>\n    { \n      ! simplified && \n        <Typography.Title level={2} className=\"heading\">\n        Cryptocurrencies News\n        </Typography.Title>\n      }\n       <Loader />\n    </>\n    )\n    \n  return (\n    <>\n    { \n      ! simplified && \n        <Typography.Title level={2} className=\"heading\">\n        Cryptocurrencies News\n        </Typography.Title>\n    }\n    \n    <Row gutter={[24, 24]}>\n\n      { !simplified && (\n        <Col span={24}>\n          <Select\n          showSearch\n          className=\"search-news\"\n          placeholder=\"Search For News\"\n          optionFilterProp=\"children\"\n          onChange={(val) => setnewsCategory(val)}\n          filterOption={(input,option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 }\n          >\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n            {data?.data?.coins.map((coin) => (\n              <Option value={coin.name} key={coin.name}>{coin.name}</Option>\n            ))}\n          </Select>\n        </Col>\n      )}\n\n\n      {cryptoNews.value.map((news, index) => (\n        <Col xs={24} sm={12} lg={8} key={index}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img style={{maxWidth: '200px', maxHeight: '100px'}} src={news?.image?.thumbnail?.contentUrl || staticImage} alt=\"News\"/>\n              </div>\n              <p>\n                { news.description > 100 ? \n                  `${news.description.substring(0, 100)}...`\n                  :   news.description\n                }\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || staticImage} alt=\"News\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                  <Text>{moment(news.datePublished).startOf('ss').fromNow() }</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n    </>\n  )\n}\n\nexport default News\n","import React from 'react'\nimport {Routes, Route, Link} from 'react-router-dom'\nimport {Layout, Typography, Space} from  'antd'\n\nimport { \n  Navbar,\n  Homepage,\n  Exchanges,\n  Cryptocurrencies,\n  CryptoDetails,\n  News\n } from './components'\nimport './App.css'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n      <Layout>\n          <div className=\"routes\">\n            <Routes>\n              <Route exact path=\"/Crypto-App\" element={<Homepage />} />\n              <Route exact path=\"/Crypto-App/exchanges\" element={<Exchanges />} />\n              <Route exact path=\"/Crypto-App/cryptocurrencies\" element={<Cryptocurrencies />} />\n              <Route exact path=\"/Crypto-App/crypto/:coinId\" element={<CryptoDetails />} />\n              <Route exact path=\"/Crypto-App/news\" element={<News />} />\n            </Routes>\n          </div>\n        </Layout>\n      \n      <div className=\"footer\">\n        <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\n          Cryto App <br />\n          Designed and developed in reference with JS-Mastery @ Roshan Bishi\n        </Typography.Title>\n        <Space>\n          <Link to=\"/Crypto-App\">Home</Link>\n          {/* <Link to=\"/Crypto-App/exchanges\">Exchanges</Link> */}\n          <Link to=\"/Crypto-App/news\">News</Link>\n        </Space>\n      </div>\n\n    </div>\n  \n  </div>\n  )\n}\n\nexport default App\n","import {configureStore} from '@reduxjs/toolkit'\nimport {CryptoAPI} from '../services/CryptoAPI'\nimport { NewsAPI } from '../services/NewsAPI'\n\nexport default configureStore({\n  reducer : {\n    [CryptoAPI.reducerPath] : CryptoAPI.reducer,\n    [NewsAPI.reducerPath] : NewsAPI.reducer,\n  },\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'antd/dist/antd.css'\n\nimport {Provider} from 'react-redux'\nimport store from './app/store'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>  \n      <App/>\n    </Provider>\n    {/* all component of app can use store  */}\n  </Router>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}